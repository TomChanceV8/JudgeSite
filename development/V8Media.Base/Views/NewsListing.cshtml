@using V8Media.Framework.Services
@inherits UmbracoTemplatePage<V8Media.Framework.Models.PublishedContent.NewsListing>
@{
    Layout = "Base.cshtml";
}
<div class="row">
    <h1>@Model.Content.Header</h1>
    @Html.Raw(Model.Content.BodyText)
</div>
<div class="row">
    <div class="column small-8">
        <div class="row">
            @foreach (var news in Model.Content.NewsArticles)
            {
                var image = news.GetPropertyValue<IPublishedContent>("image");

                <div class="column small-12">
                    <h2>@news.Header</h2>
                        @if (news.HasValue("image"))
                        {

                            @image.Url
                        }
                        <p>@news.NewsDate.ToString("D")</p>
                        <p>@Umbraco.Truncate(news.BodyText, 250, true, true) <a href="@news.Url">read more</a></p>
</div>
            }
        </div>
        @Html.Partial("NextPrevPager", Model.Content.Pager)
    </div>
    <div class="column small-4">
        <h3>Categories</h3>
        @foreach (var tag in ServiceFactory.GetService<NewsService>().GetCategoryTags())
        {
            <p><a href="@Model.Content.TagFilterUrl(tag.Text)">@tag.Text (@tag.NodeCount)</a></p>
        }
    </div>
    <div class="column small-4">
        <h3>Archive</h3>
        @foreach (var archiveDate in Model.Content.NewsArchiveDates)
        {
            <p><a href="@Model.Content.ArchiveUrl(archiveDate.Date.ToString("yyyy"), archiveDate.Date.ToString("MM"))">@archiveDate.Date.ToString("yyyy") @archiveDate.Date.ToString("MMMM") (@archiveDate.NodeCount)</a></p>
        }
    </div>
</div>