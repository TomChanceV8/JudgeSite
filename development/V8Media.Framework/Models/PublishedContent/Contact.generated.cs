//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Zbu.ModelsBuilder v2.1.3.52
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Zbu.ModelsBuilder;
using Zbu.ModelsBuilder.Umbraco;

namespace V8Media.Framework.Models.PublishedContent
{
	/// <summary>Contact</summary>
	[PublishedContentModel("Contact")]
	public partial class Contact : Menu
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Contact";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Contact(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Contact, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		/// <summary>Text</summary>
		[ImplementPropertyType("bodyText")]
		public IHtmlString BodyText
		{
			get { return this.GetPropertyValue<IHtmlString>("bodyText"); }
		}

		/// <summary>Google Map</summary>
		[ImplementPropertyType("googleMap")]
		public V8Media.Framework.Models.Custom.GoogleMaps GoogleMap
		{
			get { return this.GetPropertyValue<V8Media.Framework.Models.Custom.GoogleMaps>("googleMap"); }
		}

		/// <summary>Header</summary>
		[ImplementPropertyType("headerText")]
		public string Header
		{
			get { return this.GetPropertyValue<string>("headerText"); }
		}
	}
}
